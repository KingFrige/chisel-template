/* Generated by Yosys 0.7 (git sha1 61f6811, gcc 6.3.0-18+deb9u1 -O2 -fdebug-prefix-map=/build/yosys-XOsRIM/yosys-0.7=. -fstack-protector-strong -fPIC -Os) */

(* top =  1  *)
(* src = "rtl/GCD.v:1" *)
module GCD(clock, reset, io_value1, io_value2, io_loadingValues, io_outputGCD, io_outputValid);
  (* src = "rtl/GCD.v:68" *)
  reg [15:0] _00_;
  (* src = "rtl/GCD.v:68" *)
  reg [15:0] _01_;
  (* src = "rtl/GCD.v:33" *)
  wire _02_;
  (* src = "rtl/GCD.v:23" *)
  wire _03_;
  (* src = "rtl/GCD.v:79" *)
  wire _04_;
  (* src = "rtl/GCD.v:24" *)
  wire [16:0] _05_;
  (* src = "rtl/GCD.v:27" *)
  wire [16:0] _06_;
  (* src = "rtl/GCD.v:30" *)
  wire [15:0] _07_;
  (* src = "rtl/GCD.v:31" *)
  wire [15:0] _08_;
  (* src = "rtl/GCD.v:21" *)
  wire [15:0] _GEN_0;
  (* src = "rtl/GCD.v:22" *)
  wire [15:0] _GEN_1;
  (* src = "rtl/GCD.v:11" *)
  wire [31:0] _RAND_0;
  (* src = "rtl/GCD.v:13" *)
  wire [31:0] _RAND_1;
  (* src = "rtl/GCD.v:14" *)
  wire _T_17;
  (* src = "rtl/GCD.v:15" *)
  wire [16:0] _T_18;
  (* src = "rtl/GCD.v:16" *)
  wire [16:0] _T_19;
  (* src = "rtl/GCD.v:17" *)
  wire [15:0] _T_20;
  (* src = "rtl/GCD.v:18" *)
  wire [16:0] _T_21;
  (* src = "rtl/GCD.v:19" *)
  wire [16:0] _T_22;
  (* src = "rtl/GCD.v:20" *)
  wire [15:0] _T_23;
  (* src = "rtl/GCD.v:2" *)
  input clock;
  (* src = "rtl/GCD.v:6" *)
  input io_loadingValues;
  (* src = "rtl/GCD.v:7" *)
  output [15:0] io_outputGCD;
  (* src = "rtl/GCD.v:8" *)
  output io_outputValid;
  (* src = "rtl/GCD.v:4" *)
  input [15:0] io_value1;
  (* src = "rtl/GCD.v:5" *)
  input [15:0] io_value2;
  (* src = "rtl/GCD.v:3" *)
  input reset;
  (* src = "rtl/GCD.v:10" *)
  reg [15:0] x;
  (* src = "rtl/GCD.v:12" *)
  reg [15:0] y;
  assign _02_ = y == (* src = "rtl/GCD.v:33" *) 16'b0000000000000000;
  assign _03_ = x > (* src = "rtl/GCD.v:23" *) y;
  assign _04_ = ! (* src = "rtl/GCD.v:79" *) _T_17;
  assign _05_ = x - (* src = "rtl/GCD.v:24" *) y;
  assign _06_ = y - (* src = "rtl/GCD.v:27" *) x;
  assign _07_ = _T_17 ? (* src = "rtl/GCD.v:30" *) _T_20 : x;
  assign _08_ = _T_17 ? (* src = "rtl/GCD.v:31" *) y : _T_23;
  always @* begin
    _00_ = x;
    _01_ = y;
    casez (io_loadingValues)
      1'b1:
          _00_ = io_value1;
      default:
          casez (_T_17)
            1'b1:
                _00_ = _T_20;
            default:
                /* empty */;
          endcase
    endcase
    casez (io_loadingValues)
      1'b1:
          _01_ = io_value2;
      default:
          casez (_04_)
            1'b1:
                _01_ = _T_23;
            default:
                /* empty */;
          endcase
    endcase
  end
  always @(posedge clock) begin
      x <= _00_;
      y <= _01_;
  end
  assign _T_17 = _03_;
  assign _T_18 = _05_;
  assign _T_19 = _T_18;
  assign _T_20 = _T_19[15:0];
  assign _T_21 = _06_;
  assign _T_22 = _T_21;
  assign _T_23 = _T_22[15:0];
  assign _GEN_0 = _07_;
  assign _GEN_1 = _08_;
  assign io_outputGCD = x;
  assign io_outputValid = _02_;
endmodule
